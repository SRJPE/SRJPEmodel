% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storage.R
\name{store_model_fit}
\alias{store_model_fit}
\title{Store Model Fits}
\usage{
store_model_fit(
  con,
  storage_account,
  container_name,
  access_key,
  data,
  results_name,
  description,
  mainstem = FALSE,
  ...
)
}
\arguments{
\item{con}{A connection object to the database.}

\item{storage_account}{A string specifying the Azure storage account name.}

\item{container_name}{A string specifying the container name in the Azure storage account.}

\item{access_key}{A string specifying the Azure storage access key with write permissions.}

\item{data}{The model result data object that needs to be stored.}

\item{results_name}{A string specifying a name to identify the model results in Azure Blob Storage.}

\item{...}{Additional named arguments to be passed as metadata to the blob storage.}
}
\value{
A string representing the URL of the blob in Azure Blob Storage where the model results are stored.
}
\description{
This function stores a model fit object in an Azure Blob Container and the data into JPE database.
It uploads the model data to Azure Blob Storage and updates the database with relevant information about the model run and parameters.
}
\examples{
\dontrun{
con <- DBI::dbConnect(RPostgres::Postgres(),
                       dbname = cfg$db_name,
                       host = cfg$db_host,
                       port = cfg$db_port,
                       user = cfg$db_user,
                       password = cfg$db_password)

blob_url <- store_model_fit(con,
                            storage_account = "my_storage_account",
                            container_name = "my_container",
                            access_key = "my_access_key",
                            data = model_results,
                            results_name = "model_name",
                            description = "model_description",
                            file_name = "file_name")

print(blob_url)

dbDisconnect(con)
}
}
